import os
import asyncio
from pyrogram import Client, filters
from pyrogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from flask import Flask, jsonify
from threading import Thread

API_ID = 16267139
API_HASH = "e0bdab938a5b5d771411f45ee12a9f2b"
BOT_TOKEN = "8347361707:AAHGPqpYoSqfKeex_QSvb6Wgg-BjeXD7Q10"
ADMIN_ID = 7843231115
CHANNEL_ID = -1002714387561 
BOT_USERNAME = "adultvideofree_bot"
CHANNEL_LINK = "https://t.me/+fnk2mum5ClNhMWM9"

app = Client(
    "LinkBot",
    api_id=API_ID,
    api_hash=API_HASH,
    bot_token=BOT_TOKEN
)

@app.on_message(filters.private & filters.user(ADMIN_ID) & (filters.document | filters.video | filters.audio | filters.photo))
async def handle_admin_file(client: Client, message: Message):
    try:
        await message.reply_text("рдлрд╝рд╛рдЗрд▓ рдЪреИрдирд▓ рдореЗрдВ рд╕реНрдЯреЛрд░ рд╣реЛ рд░рд╣реА рд╣реИ... рдХреГрдкрдпрд╛ рдкреНрд░рддреАрдХреНрд╖рд╛ рдХрд░реЗрдВред")
        
        forwarded_msg = await message.copy(CHANNEL_ID)
        
        message_id = forwarded_msg.id
        deep_link = f"https://t.me/{BOT_USERNAME}?start={message_id}"
        
        await message.reply_text(
            f"тЬЕ **рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рд╕реНрдЯреЛрд░ рд╣реЛ рдЧрдИ!**\n\n"
            f"рдпрд╣ рдЖрдкрдХреА Deep Link рд╣реИ:\n\n"
            f"`{deep_link}`\n\n"
            f"**рдЯреЗрд╕реНрдЯ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП:** рдЗрд╕реЗ рдХрд┐рд╕реА рдФрд░ рдпреВрдЬрд╝рд░ рдХреЛ рднреЗрдЬреЗрдВред"
        )
        
    except Exception as e:
        await message.reply_text(
            f"тЭМ рдлрд╝рд╛рдЗрд▓ рдкреНрд░реЛрд╕реЗрд╕ рдХрд░рддреЗ рд╕рдордп рдПрдХ рддреНрд░реБрдЯрд┐ рд╣реБрдИ:\n"
            f"**{e}**\n\n"
            f"рдЕрдЧрд░ рддреНрд░реБрдЯрд┐ 'Peer id invalid' рд╣реИ, рддреЛ рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░реЗрдВ рдХрд┐ рдмреЙрдЯ рдЪреИрдирд▓ рдореЗрдВ 'Post Messages' рдХреА рдЕрдиреБрдорддрд┐ рдХреЗ рд╕рд╛рде рдПрдбрдорд┐рди рд╣реИред"
        )

# 1. рд╕рд╛рдорд╛рдиреНрдп /start рдХрдорд╛рдВрдб (рдХреЛрдИ payload рдирд╣реАрдВ) рдХреЗ рд▓рд┐рдП рдирдпрд╛ рд╣реИрдВрдбрд▓рд░
@app.on_message(filters.private & filters.regex("^/start$|^/start@" + BOT_USERNAME + "$"))
async def handle_simple_start(client: Client, message: Message):
    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("ЁЯФЧ Channel Link ЁЯФЧ", url=CHANNEL_LINK)]
    ])

    welcome_text = (
        "тЬи __**Welcome to the File Link Bot**__ тЬи\n\n"
        "**рдлрд╝рд╛рдЗрд▓реЛрдВ рдХреЗ рд▓рд┐рдП, рдХреГрдкрдпрд╛ рд╣рдорд╛рд░реЗ рдЪреИрдирд▓ рд╕реЗ рдкреНрд░рд╛рдкреНрдд рд╡рд┐рд╢реЗрд╖ рд▓рд┐рдВрдХ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред**\n\n"
        "рдпрд╣ рд▓рд┐рдВрдХ рдЖрдкрдХреЛ рд╕реАрдзреЗ рдЖрдкрдХреА рдлрд╝рд╛рдЗрд▓ рддрдХ рдкрд╣реБрдБрдЪрд╛ рджреЗрдЧрд╛!\n"
        "рдиреАрдЪреЗ рджрд┐рдП рдЧрдП рдмрдЯрди рд╕реЗ рд╣рдорд╛рд░реЗ рдЪреИрдирд▓ рдХреЛ рдЬреЙрдЗрди рдХрд░реЗрдВ рдФрд░ рд╡рд┐рд╢реЗрд╖ рд▓рд┐рдВрдХ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ:"
    )
    
    is_admin = message.from_user.id == ADMIN_ID
    if is_admin:
        welcome_text += (
            "\n\n**ЁЯСС рдПрдбрдорд┐рди рдиреЛрдЯрд┐рд╕:**\n"
            "рдлрд╝рд╛рдЗрд▓ рдХрд╛ рд▓рд┐рдВрдХ рдмрдирд╛рдиреЗ рдХреЗ рд▓рд┐рдП, рдореБрдЭреЗ рдХреЛрдИ рднреА рдлрд╝рд╛рдЗрд▓ рднреЗрдЬреЗрдВред"
        )
    
    await message.reply_text(
        welcome_text,
        reply_markup=keyboard,
        parse_mode="markdown" 
    )

# 2. Deep Link /start <payload> рдХреЗ рд▓рд┐рдП рд╣реИрдВрдбрд▓рд░
@app.on_message(filters.private & filters.command("start") & ~filters.regex("^/start$|^/start@" + BOT_USERNAME + "$"))
async def handle_deep_link_start(client: Client, message: Message):
    
    # рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░реЗрдВ рдХрд┐ payload рдореМрдЬреВрдж рд╣реИ
    if len(message.command) < 2:
        return 
        
    payload = message.command[1]
    
    try:
        message_id = int(payload)
        
        await client.copy_message(
            chat_id=message.chat.id,
            from_chat_id=CHANNEL_ID,
            message_id=message_id
        )
        
        await message.reply_text(
            "ЁЯОЙ **Done!** рдЖрдкрдХреА requested рдлрд╝рд╛рдЗрд▓ рднреЗрдЬ рджреА рдЧрдИ рд╣реИред\n"
            "рдЕрдЧрд░ рдлрд╝рд╛рдЗрд▓ рди рджрд┐рдЦреЗ, рддреЛ рдереЛрдбрд╝рд╛ рдЗрдВрддрдЬрд╝рд╛рд░ рдХрд░реЗрдВред\n\n",
            parse_mode="markdown"
        )
        
    except ValueError:
        # рдЕрдЧрд░ payload рд╕рдВрдЦреНрдпрд╛ рдирд╣реАрдВ рд╣реИ (рд╣реЛ рд╕рдХрддрд╛ рд╣реИ рдХреЛрдИ рдХрд╕реНрдЯрдо deep link рд╣реЛ)
        await message.reply_text("рдирдорд╕реНрддреЗ! рдЕрдорд╛рдиреНрдп Deep Link IDред")
        
    except Exception as e:
        # рдЕрдЧрд░ рдлрд╝рд╛рдЗрд▓ рдореМрдЬреВрдж рдирд╣реАрдВ рд╣реИ
        await message.reply_text(
            "тЭМ **рдХреНрд╖рдорд╛ рдХрд░реЗрдВ!** рдпрд╣ рдлрд╝рд╛рдЗрд▓ рдЕрдм рдЙрдкрд▓рдмреНрдз рдирд╣реАрдВ рд╣реИ рдпрд╛ рд▓рд┐рдВрдХ рдПрдХреНрд╕рдкрд╛рдпрд░ рд╣реЛ рдЧрдпрд╛ рд╣реИред"
        )


flask_app = Flask(__name__)

@flask_app.route('/')
def home():
    return jsonify({"status": "Bot is running", "platform": "Replit"}), 200

def run_flask():
    port = int(os.environ.get('PORT', 8080))
    flask_app.run(host='0.0.0.0', port=port)

if __name__ == "__main__":
    Thread(target=run_flask).start()
    app.run()
        
